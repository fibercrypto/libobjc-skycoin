

#import "OAIInlineResponse2005ManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

@implementation OAIInlineResponse2005ManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _entriesBuilder = [[OAIApiv1walletsEntriesManagedObjectBuilder alloc] init];
       _metaBuilder = [[OAIApiv1walletsMetaManagedObjectBuilder alloc] init];
    }
    return self;
}

-(OAIInlineResponse2005ManagedObject*)createNewOAIInlineResponse2005ManagedObjectInContext:(NSManagedObjectContext*)context {
    OAIInlineResponse2005ManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([OAIInlineResponse2005ManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(OAIInlineResponse2005ManagedObject*)OAIInlineResponse2005ManagedObjectFromOAIInlineResponse2005:(OAIInlineResponse2005*)object context:(NSManagedObjectContext*)context {
    OAIInlineResponse2005ManagedObject* newOAIInlineResponse2005 = [self createNewOAIInlineResponse2005ManagedObjectInContext:context];
    [self updateOAIInlineResponse2005ManagedObject:newOAIInlineResponse2005 withOAIInlineResponse2005:object];
    return newOAIInlineResponse2005;
}

-(void)updateOAIInlineResponse2005ManagedObject:(OAIInlineResponse2005ManagedObject*)managedObject withOAIInlineResponse2005:(OAIInlineResponse2005*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    if(managedObject.entries) {
        for (id object in managedObject.entries) {
            [context deleteObject:object];
        }
    }
    if(object.entries) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.entries) {
            id convertedObj = [self.entriesBuilder OAIApiv1walletsEntriesManagedObjectFromOAIApiv1walletsEntries:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.entries = convertedObjs;
    }

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder OAIApiv1walletsMetaManagedObjectFromOAIApiv1walletsMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateOAIApiv1walletsMetaManagedObject:managedObject.meta withOAIApiv1walletsMeta:object.meta];
    }

}

-(OAIInlineResponse2005*)OAIInlineResponse2005FromOAIInlineResponse2005ManagedObject:(OAIInlineResponse2005ManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    OAIInlineResponse2005* newOAIInlineResponse2005 = [[OAIInlineResponse2005 alloc] init];
    [self updateOAIInlineResponse2005:newOAIInlineResponse2005 withOAIInlineResponse2005ManagedObject:obj];
    return newOAIInlineResponse2005;
}

-(void)updateOAIInlineResponse2005:(OAIInlineResponse2005*)newOAIInlineResponse2005 withOAIInlineResponse2005ManagedObject:(OAIInlineResponse2005ManagedObject*)obj {
    if(obj.entries != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.entries) {
            id convertedObj = [self.entriesBuilder OAIApiv1walletsEntriesFromOAIApiv1walletsEntriesManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newOAIInlineResponse2005.entries = (NSArray<OAIApiv1walletsEntries>*)convertedObjs;
    }
    
    newOAIInlineResponse2005.meta = [self.metaBuilder OAIApiv1walletsMetaFromOAIApiv1walletsMetaManagedObject:obj.meta];
}

@end
