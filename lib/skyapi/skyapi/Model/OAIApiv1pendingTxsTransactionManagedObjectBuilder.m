

#import "OAIApiv1pendingTxsTransactionManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

@implementation OAIApiv1pendingTxsTransactionManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _outputsBuilder = [[OAIApiv1exploreraddressOutputsManagedObjectBuilder alloc] init];
    }
    return self;
}

-(OAIApiv1pendingTxsTransactionManagedObject*)createNewOAIApiv1pendingTxsTransactionManagedObjectInContext:(NSManagedObjectContext*)context {
    OAIApiv1pendingTxsTransactionManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([OAIApiv1pendingTxsTransactionManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(OAIApiv1pendingTxsTransactionManagedObject*)OAIApiv1pendingTxsTransactionManagedObjectFromOAIApiv1pendingTxsTransaction:(OAIApiv1pendingTxsTransaction*)object context:(NSManagedObjectContext*)context {
    OAIApiv1pendingTxsTransactionManagedObject* newOAIApiv1pendingTxsTransaction = [self createNewOAIApiv1pendingTxsTransactionManagedObjectInContext:context];
    [self updateOAIApiv1pendingTxsTransactionManagedObject:newOAIApiv1pendingTxsTransaction withOAIApiv1pendingTxsTransaction:object];
    return newOAIApiv1pendingTxsTransaction;
}

-(void)updateOAIApiv1pendingTxsTransactionManagedObject:(OAIApiv1pendingTxsTransactionManagedObject*)managedObject withOAIApiv1pendingTxsTransaction:(OAIApiv1pendingTxsTransaction*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    if(managedObject.outputs) {
        for (id object in managedObject.outputs) {
            [context deleteObject:object];
        }
    }
    if(object.outputs) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.outputs) {
            id convertedObj = [self.outputsBuilder OAIApiv1exploreraddressOutputsManagedObjectFromOAIApiv1exploreraddressOutputs:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.outputs = convertedObjs;
    }
    managedObject.innerHash = [object.innerHash copy];
    managedObject.inputs = [object.inputs copy];
    managedObject.sigs = [object.sigs copy];
    managedObject.length = [object.length copy];
    managedObject.txid = [object.txid copy];
    managedObject.type = [object.type copy];
    managedObject.timestamp = [object.timestamp copy];

}

-(OAIApiv1pendingTxsTransaction*)OAIApiv1pendingTxsTransactionFromOAIApiv1pendingTxsTransactionManagedObject:(OAIApiv1pendingTxsTransactionManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    OAIApiv1pendingTxsTransaction* newOAIApiv1pendingTxsTransaction = [[OAIApiv1pendingTxsTransaction alloc] init];
    [self updateOAIApiv1pendingTxsTransaction:newOAIApiv1pendingTxsTransaction withOAIApiv1pendingTxsTransactionManagedObject:obj];
    return newOAIApiv1pendingTxsTransaction;
}

-(void)updateOAIApiv1pendingTxsTransaction:(OAIApiv1pendingTxsTransaction*)newOAIApiv1pendingTxsTransaction withOAIApiv1pendingTxsTransactionManagedObject:(OAIApiv1pendingTxsTransactionManagedObject*)obj {
    if(obj.outputs != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.outputs) {
            id convertedObj = [self.outputsBuilder OAIApiv1exploreraddressOutputsFromOAIApiv1exploreraddressOutputsManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newOAIApiv1pendingTxsTransaction.outputs = (NSArray<OAIApiv1exploreraddressOutputs>*)convertedObjs;
    }
    
    newOAIApiv1pendingTxsTransaction.innerHash = [obj.innerHash copy];
    newOAIApiv1pendingTxsTransaction.inputs = [obj.inputs copy];
    newOAIApiv1pendingTxsTransaction.sigs = [obj.sigs copy];
    newOAIApiv1pendingTxsTransaction.length = [obj.length copy];
    newOAIApiv1pendingTxsTransaction.txid = [obj.txid copy];
    newOAIApiv1pendingTxsTransaction.type = [obj.type copy];
    newOAIApiv1pendingTxsTransaction.timestamp = [obj.timestamp copy];
}

@end
